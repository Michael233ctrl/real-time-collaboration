services:
  auth_service:
    container_name: auth_service
    restart: on-failure
    build:
      dockerfile: ../auth_service/Dockerfile
      context: ../auth_service
    env_file:
      - env/.env.local
    command: >
      bash -c "python3 -m src.pre_start 
      && python3 -m src.initial_data 
      && python3 -m uvicorn src.main:app --host 0.0.0.0 --port 9020 --reload --log-level debug"
    ports:
      - "9020:9020"
    volumes:
      - ../auth_service:/auth_service
    depends_on:
      - mongo_db

  document_service:
    container_name: document_service
    restart: on-failure
    build:
      dockerfile: ../document_service/Dockerfile
      context: ../document_service
    env_file:
      - env/.env.local
    command: >
      bash -c "python3 -m src.pre_start 
      && python3 -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ../document_service:/document_service
    depends_on:
      - mongo_db
      - auth_service

  mongo_db:
    image: mongo:7.0
    container_name: mongo
#    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/etc/mongodb/pki/keyfile" ]
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
#      - ./conf/rs_keyfile:/etc/mongodb/pki/keyfile
#      - ./conf/init_replica.js:/docker-entrypoint-initdb.d/init_replica.js

#  webserver:
#    container_name: webserver
#    image: nginx
#    ports:
#      - "80:80"
#      - "8080:8080"
#    volumes:
#      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - mongo_db
#      - auth_service
#      - document_service

volumes:
  mongo-data: